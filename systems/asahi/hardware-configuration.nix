# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["usb_storage" "sdhci_pci"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = [];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/c2c34139-82b5-4e16-b9b3-cfd4177b1a7b";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/8060fc0a-6c5c-4903-800b-c7dd61df4abc";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/69B5-161D";
    fsType = "vfat";
  };

  swapDevices = [];

  systemd.services.swap-keys = {
    wantedBy = ["multi-user.target"];
    path = [pkgs.coreutils];
    enable = true;
    serviceConfig = {
      User = "root";
      Group = "root";
    };
    script = ''
      echo 1 > /sys/module/hid_apple/parameters/swap_fn_leftctrl
      echo 1 > /sys/module/hid_apple/parameters/swap_opt_cmd
    '';
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlan0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "aarch64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "ondemand";
}
